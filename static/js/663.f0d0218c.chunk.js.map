{"version":3,"file":"static/js/663.f0d0218c.chunk.js","mappings":"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","sources":["webpack://kapusta/./src/components/FormTransaction/FormTransaction.module.css?f8df","components/FormTransaction/FormTransaction.jsx","webpack://kapusta/./src/components/IncomeComponent/IncomeComponent.module.css?b329","components/IncomeComponent/IncomeComponent.jsx","webpack://kapusta/./src/components/Summary/Summary.module.css?9efb","components/Summary/Summary.jsx","../node_modules/nanoid/index.browser.js","webpack://kapusta/./src/components/TransactionList/TransactionList.module.css?a859","components/TransactionList/TransactionList.jsx","redux/monthsStats/monthsStats-selector.js","redux/transaction/transaction-selector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormTransaction_form__Drpod\",\"timeDiv\":\"FormTransaction_timeDiv__VkmNl\",\"calendarIcon\":\"FormTransaction_calendarIcon__7sCrv\",\"date\":\"FormTransaction_date__exygo\",\"input\":\"FormTransaction_input__Jbj3O\",\"select\":\"FormTransaction_select__cUCSM\",\"calcInput\":\"FormTransaction_calcInput__cByYk\",\"buttonList\":\"FormTransaction_buttonList__r8Tzc\",\"buttonInput\":\"FormTransaction_buttonInput__Fqdxq\",\"buttonClear\":\"FormTransaction_buttonClear__hDUfF\",\"label\":\"FormTransaction_label__LxjKS\"};","import { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport DatePicker from 'react-datepicker';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport s from './FormTransaction.module.css';\nimport { toast } from 'react-toastify';\nimport { useMediaQuery } from 'react-responsive';\nimport { useNavigate } from 'react-router-dom';\nimport Sprite from '../../assets/images/svg/sprite.svg';\n\nconst colourStyles = {\n  control: styles => ({\n    ...styles,\n    border: ' 2px solid var(--border-light)',\n    width: '169px',\n    borderRadius: '0px',\n    color: '#C7CCDC',\n    backgroundColor: 'var(--input-bg-color)',\n  }),\n  menuList: styles => ({\n    ...styles,\n    backgroundColor: 'var(--input-bg-color)',\n    border: ' 2px solid var(--border-light)',\n    borderRadius: '4px',\n  }),\n  placeholder: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n  singleValue: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n};\n\nconst colourStylesMob = {\n  control: styles => ({\n    ...styles,\n    border: ' none',\n    width: '280px',\n    borderRadius: '0px',\n    color: '#C7CCDC',\n    backgroundColor: 'transparent',\n  }),\n  menuList: styles => ({\n    ...styles,\n    backgroundColor: 'var(--input-bg-color)',\n    border: ' 2px solid var(--border-light)',\n    borderRadius: '4px',\n  }),\n  placeholder: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n  singleValue: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n};\n\nconst FormTransaction = ({ operation, options, date, setDate }) => {\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState(null);\n  const [amount, setAmount] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery({ query: '(max-width: 767.9px)' });\n  const handleChange = e => {\n    const { value } = e.target;\n    setDescription(value);\n  };\n\n  const handleChangeAmount = e => {\n    const { value } = e.target;\n    setAmount(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (category === null) {\n      return toast.error(t('transactions.categoryInfo'), {\n        autoClose: 2000,\n        theme: 'colored',\n      });\n    }\n    const initialForm = {\n      description,\n      amount: Number(amount),\n      date: date.toISOString().slice(0, 10),\n      category: category.value,\n    };\n    dispatch(operation(initialForm));\n    if (isMobile) {\n      navigate('transactions');\n    }\n  };\n\n  const reset = () => {\n    setDate(new Date());\n    setDescription('');\n    setCategory(null);\n    setAmount('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <div className={s.timeDiv}>\n        <svg className={s.calendarIcon} width=\"90\" height=\"31\">\n          <use href={`${Sprite}#icon-calendar`}></use>\n        </svg>\n        <DatePicker\n          dateFormat=\"dd.MM.yyyy\"\n          className={s.date}\n          selected={date}\n          onChange={(date: Date) => setDate(date)}\n        />\n      </div>\n\n      <label className={s.label}>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"description\"\n          placeholder={t('transactions.prodDescr')}\n          required\n          value={description}\n          onChange={handleChange}\n        />\n      </label>\n      <Select\n        className={s.select}\n        styles={isMobile ? colourStylesMob : colourStyles}\n        placeholder={t('transactions.prodCateg')}\n        value={category}\n        onChange={setCategory}\n        options={options}\n      />\n      <label>\n        <input\n          className={s.calcInput}\n          type=\"number\"\n          name=\"number\"\n          min=\"0\"\n          pattern=\"^[1-9]\\d*$\"\n          required\n          placeholder=\"0,00\"\n          value={amount}\n          onChange={handleChangeAmount}\n        />\n      </label>\n      <div className={s.buttonList}>\n        {' '}\n        <button type=\"submit\" className={s.buttonInput}>\n          {t('transactions.input')}\n        </button>{' '}\n        <button type=\"button\" className={s.buttonClear} onClick={reset}>\n          {t('transactions.clear')}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nFormTransaction.propTypes = {\n  operation: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default FormTransaction;\n","// extracted by mini-css-extract-plugin\nexport default {\"transactions\":\"IncomeComponent_transactions__E5MJg\",\"form\":\"IncomeComponent_form__7jPzo\",\"timeDiv\":\"IncomeComponent_timeDiv__xVTIw\",\"linkContainer\":\"IncomeComponent_linkContainer__GbmBy\",\"link\":\"IncomeComponent_link__8zmzM\",\"activeLink\":\"IncomeComponent_activeLink__zfZR1\",\"date\":\"IncomeComponent_date__1JGpA\",\"input\":\"IncomeComponent_input__mCLao\",\"select\":\"IncomeComponent_select__2-Xe1\",\"calcInput\":\"IncomeComponent_calcInput__h34T4\",\"buttonInput\":\"IncomeComponent_buttonInput__um8f8\",\"buttonClear\":\"IncomeComponent_buttonClear__z1IJS\"};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIncomesTransactions, isLoading } from 'redux/transaction/transaction-selector';\nimport Loader from 'components/Loader/Loader';\nimport FormTransaction from 'components/FormTransaction/FormTransaction';\nimport { Summary } from 'components/Summary/Summary';\nimport TransactionList from 'components/TransactionList/TransactionList';\nimport {\n  addIncomeTransaction,\n  getIncomeTransaction,\n} from 'redux/transaction/transaction-operations';\nimport { incomesStats } from 'redux/monthsStats/monthsStats-selector';\nimport s from './IncomeComponent.module.css';\nimport { getEmailUser } from 'redux/auth/AuthSelector';\nimport { useTranslation } from 'react-i18next';\n\nconst IncomeComponent = () => {\n  const [date, setDate] = useState(new Date());\n  const loading = useSelector(isLoading);\n  const email = useSelector(getEmailUser);\n  const transactions = useSelector(getIncomesTransactions);\n  const monthStats = useSelector(incomesStats);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const incomeCategArray = t('incomeCategArray', { returnObjects: true });\n\n  useEffect(() => {\n    if (email && transactions.length === 0) dispatch(getIncomeTransaction());\n    // eslint-disable-next-line\n  }, [transactions.length, email]);\n\n  return (\n    <>\n      <FormTransaction\n        operation={addIncomeTransaction}\n        options={incomeCategArray}\n        date={date}\n        setDate={setDate}\n      />\n      <div className={s.transactions}>\n        <TransactionList\n          location=\"incomes\"\n          transactionsArray={transactions.filter(el => el.date === date.toISOString().slice(0, 10))}\n        />\n        <Summary monthStats={monthStats} />\n      </div>\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default IncomeComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"summary\":\"Summary_summary__0kpmh\",\"title\":\"Summary_title__dimK-\",\"list\":\"Summary_list__dKE4L\",\"item\":\"Summary_item__St+1w\"};","import PropTypes from 'prop-types';\nimport { useRef } from 'react';\nimport s from './Summary.module.css';\nimport { useTranslation } from 'react-i18next';\n\nexport const Summary = ({ monthStats }) => {\n  const currentDate = useRef(new Date().getMonth());\n  const array = Object.entries(monthStats);\n  const filteredMonthsStats = array.filter(\n    (el, index) => index <= currentDate.current\n  );\n\n  const filteredMonths = array.filter(\n    (el, index) => index <= currentDate.current\n  );\n  const { t } = useTranslation();\n  const month = t('months', { returnObjects: true });\n\n  return (\n    <div className={s.summary}>\n      {filteredMonthsStats.length > 0 && (\n        <ul className={s.list}>\n          <li className={s.title}>{t('summary.summary')}</li>\n          {filteredMonths.map(el => (\n            <li key={el[0]} className={s.item}>\n              <p>{month[el[0]]}</p>\n              <p>\n                {el[1] === 'N/A'\n                  ? 0\n                  : el[1]\n                      .toFixed(2)\n                      .replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ')}\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nSummary.propTypes = {\n  monthStats: PropTypes.object.isRequired,\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"TransactionList_table__cOyds\",\"buttonDelete\":\"TransactionList_buttonDelete__ZC2ef\",\"expenses\":\"TransactionList_expenses__J27sj\",\"incomes\":\"TransactionList_incomes__1-wz6\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { nanoid } from 'nanoid';\nimport { removeTransaction } from 'redux/transaction/transaction-operations';\nimport s from './TransactionList.module.css';\nimport { getEmailUser } from 'redux/auth/AuthSelector';\n\nconst TransactionList = ({ transactionsArray, location }) => {\n  const email = useSelector(getEmailUser);\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n  const expenseReport = t('expenseReport', { returnObjects: true });\n  const incomeReport = t('incomeReport', { returnObjects: true });\n\n  const createNewArray = array => {\n    const addArray = Array(7 - array.length)\n      .fill({\n        _id: '',\n        description: '',\n        amount: null,\n        date: '',\n        category: '',\n      })\n      .map(el => ({ ...el, _id: nanoid() }));\n    return [...array, ...addArray];\n  };\n\n  const arrayTable =\n    transactionsArray.length < 7\n      ? createNewArray(transactionsArray)\n      : transactionsArray;\n\n  return (\n    <>\n      {console.log(location)}\n      {email && (\n        <table className={s.table}>\n          <thead>\n            <tr>\n              <th>{t('transactions.date')}</th>\n              <th>{t('transactions.descr')}</th>\n              <th>{t('transactions.categ')}</th>\n              <th>{t('transactions.sum')}</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody className={s.tableBody}>\n            {arrayTable.map((item, index) => (\n              <tr key={item._id}>\n                <td>{item.date && item.date.split('-').reverse().join('.')}</td>\n                <td>{item.description && item.description}</td>\n                <td>\n                  {item.category && location === 'expenses'\n                    ? expenseReport[item.category].title\n                    : incomeReport[item.category]}\n                </td>\n                <td\n                  style={\n                    location === 'expenses'\n                      ? { color: 'red', fontWeight: 'bold' }\n                      : { color: 'green', fontWeight: 'bold' }\n                  }\n                >\n                  {location === 'expenses' && item.amount && '-'}\n                  &nbsp;\n                  {item.amount &&\n                    `${item.amount\n                      .toFixed(2)\n                      .replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ')} ${t(\n                      'general.currencyName'\n                    )}`}\n                </td>\n                <td>\n                  {item.amount && (\n                    <button\n                      className={s.buttonDelete}\n                      onClick={() => dispatch(removeTransaction(item._id))}\n                    ></button>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n\nTransactionList.propTypes = {\n  transactionsArray: PropTypes.array.isRequired,\n  location: PropTypes.string.isRequired,\n};\n\nexport default TransactionList;\n","export const expensesStats = state => state.monthsStats.expenses;\nexport const incomesStats = state => state.monthsStats.incomes;\n","export const isLoading = state => state.transactions.loading;\nexport const getExpensesTransactions = state => state.transactions.expenses;\nexport const getIncomesTransactions = state => state.transactions.incomes;\n"],"names":["colourStyles","control","styles","_objectSpread","border","width","borderRadius","color","backgroundColor","menuList","placeholder","singleValue","colourStylesMob","_ref","operation","options","date","setDate","_useState","useState","_useState2","_slicedToArray","description","setDescription","_useState3","_useState4","category","setCategory","_useState5","_useState6","amount","setAmount","dispatch","useDispatch","navigate","useNavigate","t","useTranslation","isMobile","useMediaQuery","query","_jsxs","onSubmit","e","preventDefault","toast","error","autoClose","theme","initialForm","Number","toISOString","slice","value","className","s","children","_jsx","height","href","concat","Sprite","DatePicker","dateFormat","selected","onChange","type","name","required","target","Select","min","pattern","onClick","Date","loading","useSelector","isLoading","email","getEmailUser","transactions","getIncomesTransactions","monthStats","incomesStats","incomeCategArray","returnObjects","useEffect","length","getIncomeTransaction","_Fragment","FormTransaction","addIncomeTransaction","TransactionList","location","transactionsArray","filter","el","Summary","Loader","currentDate","useRef","getMonth","array","Object","entries","filteredMonthsStats","index","current","filteredMonths","month","map","toFixed","replace","nanoid","size","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","expenseReport","incomeReport","arrayTable","addArray","Array","fill","_id","_toConsumableArray","createNewArray","console","log","table","tableBody","item","split","reverse","join","title","style","fontWeight","buttonDelete","removeTransaction","expensesStats","state","monthsStats","expenses","incomes","getExpensesTransactions"],"sourceRoot":""}