{"version":3,"file":"static/js/596.db2c9ff3.chunk.js","mappings":"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","sources":["webpack://kapusta/./src/components/BalanceModal/BalanceModal.module.css?08e8","components/BalanceModal/BalanceModal.jsx","webpack://kapusta/./src/components/Balance/Balance.module.css?b75c","components/Balance/Balance.jsx","webpack://kapusta/./src/components/FormTransaction/FormTransaction.module.css?f8df","components/FormTransaction/FormTransaction.jsx","webpack://kapusta/./src/components/DataHeader/DataHeader.module.css?2a79","components/DataHeader/DataHeader.jsx","webpack://kapusta/./src/components/HomeNavigation/HomeNavigation.module.css?b8e2","components/HomeNavigation/HomeNavigation.jsx","webpack://kapusta/./src/components/MobileTransactionList/mobileTransactionList.module.css?d0b5","components/MobileTransactionList/MobileTransactionList.jsx","webpack://kapusta/./src/components/DatePicker/datePickerComp.module.css?3d52","components/DatePicker/DatePickerComp.jsx","webpack://kapusta/./src/components/MobileFormTransaction/MobileFormTransaction.module.css?7c5e","components/MobileFormTransaction/MobileFormTransaction.jsx","pages/HomePage.jsx","redux/balance/balanceSelector.js","redux/transaction/transaction-selector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"BalanceModal_modal__C0hkc\",\"part\":\"BalanceModal_part__Mp8tJ\",\"text\":\"BalanceModal_text__nR0Ka\",\"secondText\":\"BalanceModal_secondText__a3wM0\"};","import s from './BalanceModal.module.css';\n\nexport const BalanceModal = () => {\n  return (\n    <div className={s.modalWindow}>\n      <div className={s.modal}>\n        <p className={s.text}>\n          Hello! To get started, enter the current balance of your account!\n        </p>\n        <p className={s.secondText}>\n          You can't spend money until you have it :)\n        </p>\n      </div>\n      <div className={s.part}></div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"balance\":\"Balance_balance__41oSS\",\"label\":\"Balance_label__9QrSJ\",\"title\":\"Balance_title__2Bv5K\",\"titleMobile\":\"Balance_titleMobile__OsNQZ\",\"money\":\"Balance_money__1igFa\",\"moneyMobile\":\"Balance_moneyMobile__ovTL5\",\"info\":\"Balance_info__eIFcS\",\"input\":\"Balance_input__5zeug\",\"inputMobile\":\"Balance_inputMobile__fSkb3\",\"button\":\"Balance_button__UsoOP\",\"labelMobile\":\"Balance_labelMobile__f4IoX\",\"buttonActive\":\"Balance_buttonActive__g5Mhi Balance_button__UsoOP\",\"buttonNone\":\"Balance_buttonNone__2BvoG\",\"text\":\"Balance_text__-Gzkc\",\"reportsLinkWrapper\":\"Balance_reportsLinkWrapper__-66-O\",\"reports\":\"Balance_reports__z7IWA\",\"iconReports\":\"Balance_iconReports__ndMwB\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useMediaQuery } from 'react-responsive';\nimport { useLocation } from 'react-router-dom';\nimport { changeBalance } from 'redux/balance/balanceOperations';\nimport { BalanceModal } from 'components/BalanceModal/BalanceModal';\nimport { useTranslation } from 'react-i18next';\nimport { getEmailUser } from 'redux/auth/AuthSelector';\nimport {\n  getExpensesTransactions,\n  getIncomesTransactions,\n} from 'redux/transaction/transaction-selector';\nimport s from './Balance.module.css';\nimport { getBalance } from 'redux/balance/balanceSelector';\nimport audio from '../../assets/sounds/coins-drop.mp3';\n\n// import useWindowDimensions from '../../hooks/useWindowDimensions';\n\nexport const Balance = () => {\n  const balance = useSelector(getBalance);\n  const email = useSelector(getEmailUser);\n  const expenses = useSelector(getExpensesTransactions);\n  const incomes = useSelector(getIncomesTransactions);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const location = useLocation();\n  const [input, setInput] = useState(0);\n  const isTab = useMediaQuery({ query: '(max-width: 1280px)' });\n  const isMobile = useMediaQuery({ query: '(max-width: 767.9px)' });\n\n  const soundFX = new Audio(audio);\n\n  const handleChange = e => {\n    const { value } = e.target;\n\n    setInput(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    soundFX.play();\n    if (input !== '') return dispatch(changeBalance({ newBalance: input }));\n\n    toast.error(t('balance.inputInfo'), {\n      autoClose: 2000,\n      theme: 'colored',\n    });\n  };\n\n  return (\n    <>\n      <form className={s.balance} onSubmit={handleSubmit}>\n        <h3\n          className={\n            isMobile && location.pathname === '/reports'\n              ? s.titleMobile\n              : s.title\n          }\n        >\n          {t('balance.balanceTitle')}:\n        </h3>\n        <div className={s.info}>\n          <label\n            className={\n              isMobile && location.pathname === '/reports'\n                ? s.labelMobile\n                : s.label\n            }\n          >\n            <input\n              type=\"text\"\n              className={\n                isMobile && location.pathname === '/reports'\n                  ? s.inputMobile\n                  : s.input\n              }\n              value={\n                balance !== 0\n                  ? balance\n                      .toFixed(2)\n                      .replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ')\n                  : (expenses.length === 0) & (incomes.length === 0)\n                  ? input\n                  : 0\n              }\n              decimalscale={1}\n              maxLength={9}\n              onChange={handleChange}\n              disabled={\n                balance === 0 &&\n                (expenses.length === 0) & (incomes.length === 0)\n                  ? false\n                  : true\n              }\n            />\n            <span\n              className={\n                isMobile && location.pathname === '/reports'\n                  ? s.moneyMobile\n                  : s.money\n              }\n            >\n              {t('balance.currency')}\n            </span>\n            {input === 0 &&\n            balance === 0 &&\n            email &&\n            (expenses.length === 0) & (incomes.length === 0) ? (\n              <BalanceModal />\n            ) : (\n              !(<BalanceModal />)\n            )}\n          </label>\n\n          {\n            <button\n              className={\n                isTab && location.pathname === '/reports'\n                  ? s.buttonNone\n                  : balance === 0 &&\n                    (expenses.length === 0) & (incomes.length === 0)\n                  ? s.buttonActive\n                  : s.button\n              }\n              type=\"submit\"\n              disabled={\n                balance === 0 &&\n                (expenses.length === 0) & (incomes.length === 0)\n                  ? false\n                  : true\n              }\n            >\n              {t('balance.confirm')}\n            </button>\n          }\n        </div>\n      </form>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormTransaction_form__Drpod\",\"timeDiv\":\"FormTransaction_timeDiv__VkmNl\",\"calendarIcon\":\"FormTransaction_calendarIcon__7sCrv\",\"date\":\"FormTransaction_date__exygo\",\"input\":\"FormTransaction_input__Jbj3O\",\"select\":\"FormTransaction_select__cUCSM\",\"calcInput\":\"FormTransaction_calcInput__cByYk\",\"buttonList\":\"FormTransaction_buttonList__r8Tzc\",\"buttonInput\":\"FormTransaction_buttonInput__Fqdxq\",\"buttonClear\":\"FormTransaction_buttonClear__hDUfF\",\"label\":\"FormTransaction_label__LxjKS\"};","import { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport DatePicker from 'react-datepicker';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport s from './FormTransaction.module.css';\nimport { toast } from 'react-toastify';\nimport { useMediaQuery } from 'react-responsive';\nimport { useNavigate } from 'react-router-dom';\nimport Sprite from '../../assets/images/svg/sprite.svg';\n\nconst colourStyles = {\n  control: styles => ({\n    ...styles,\n    border: ' 2px solid var(--border-light)',\n    width: '169px',\n    borderRadius: '0px',\n    color: '#C7CCDC',\n    backgroundColor: 'var(--input-bg-color)',\n  }),\n  menuList: styles => ({\n    ...styles,\n    backgroundColor: 'var(--input-bg-color)',\n    border: ' 2px solid var(--border-light)',\n    borderRadius: '4px',\n  }),\n  placeholder: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n  singleValue: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n};\n\nconst colourStylesMob = {\n  control: styles => ({\n    ...styles,\n    border: ' none',\n    width: '280px',\n    borderRadius: '0px',\n    color: '#C7CCDC',\n    backgroundColor: 'transparent',\n  }),\n  menuList: styles => ({\n    ...styles,\n    backgroundColor: 'var(--input-bg-color)',\n    border: ' 2px solid var(--border-light)',\n    borderRadius: '4px',\n  }),\n  placeholder: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n  singleValue: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n};\n\nconst FormTransaction = ({ operation, options, date, setDate }) => {\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState(null);\n  const [amount, setAmount] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery({ query: '(max-width: 767.9px)' });\n  const handleChange = e => {\n    const { value } = e.target;\n    setDescription(value);\n  };\n\n  const handleChangeAmount = e => {\n    const { value } = e.target;\n    setAmount(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (category === null) {\n      return toast.error(t('transactions.categoryInfo'), {\n        autoClose: 2000,\n        theme: 'colored',\n      });\n    }\n    const initialForm = {\n      description,\n      amount: Number(amount),\n      date: date.toISOString().slice(0, 10),\n      category: category.value,\n    };\n    dispatch(operation(initialForm));\n    if (isMobile) {\n      navigate('transactions');\n    }\n  };\n\n  const reset = () => {\n    setDate(new Date());\n    setDescription('');\n    setCategory(null);\n    setAmount('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <div className={s.timeDiv}>\n        <svg className={s.calendarIcon} width=\"90\" height=\"31\">\n          <use href={`${Sprite}#icon-calendar`}></use>\n        </svg>\n        <DatePicker\n          dateFormat=\"dd.MM.yyyy\"\n          className={s.date}\n          selected={date}\n          onChange={(date: Date) => setDate(date)}\n        />\n      </div>\n\n      <label className={s.label}>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"description\"\n          placeholder={t('transactions.prodDescr')}\n          required\n          value={description}\n          onChange={handleChange}\n        />\n      </label>\n      <Select\n        className={s.select}\n        styles={isMobile ? colourStylesMob : colourStyles}\n        placeholder={t('transactions.prodCateg')}\n        value={category}\n        onChange={setCategory}\n        options={options}\n      />\n      <label>\n        <input\n          className={s.calcInput}\n          type=\"number\"\n          name=\"number\"\n          min=\"0\"\n          pattern=\"^[1-9]\\d*$\"\n          required\n          placeholder=\"0,00\"\n          value={amount}\n          onChange={handleChangeAmount}\n        />\n      </label>\n      <div className={s.buttonList}>\n        {' '}\n        <button type=\"submit\" className={s.buttonInput}>\n          {t('transactions.input')}\n        </button>{' '}\n        <button type=\"button\" className={s.buttonClear} onClick={reset}>\n          {t('transactions.clear')}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nFormTransaction.propTypes = {\n  operation: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default FormTransaction;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DataHeader_container__eDcTH\",\"reportsLinkWrapper\":\"DataHeader_reportsLinkWrapper__JF-W9\",\"reports\":\"DataHeader_reports__jQzVY\",\"iconReports\":\"DataHeader_iconReports__62TRM\"};","import { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { Balance } from 'components/Balance/Balance';\n\nimport Sprite from '../../assets/images/svg/sprite.svg';\nimport s from './DataHeader.module.css';\n// import { useSelector } from 'react-redux';\n// import { getBalance } from 'redux/balance/balanceSelector';\n// import {\n//   getExpensesTransactions,\n//   getIncomesTransactions,\n// } from 'redux/transaction/transaction-selector';\n\nexport const DataHeader = () => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={s.container}>\n      <Balance />\n      <Link className={s.reportsLinkWrapper} to=\"/reports\">\n        <span className={s.reports}>{t('general.reports')}</span>\n        <svg className={s.iconReports} width=\"24\" height=\"24\">\n          <use href={`${Sprite}#icon-reports`}></use>\n        </svg>\n      </Link>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HomeNavigation_container__caUCV\",\"link\":\"HomeNavigation_link__qGIjl\",\"activeLink\":\"HomeNavigation_activeLink__2oES1\"};","import { Link, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport s from './HomeNavigation.module.css';\nimport { useSelector } from 'react-redux';\nimport {\n  getExpensesTransactions,\n  getIncomesTransactions,\n} from 'redux/transaction/transaction-selector';\nimport { getBalance } from 'redux/balance/balanceSelector';\n\nfunction HomeNavigation() {\n  const { t } = useTranslation();\n  const balance = useSelector(getBalance);\n  const expenses = useSelector(getExpensesTransactions);\n  const incomes = useSelector(getIncomesTransactions);\n  const location = useLocation();\n  return (\n    <div className={s.container}>\n      <Link\n        to=\"expenses\"\n        disabled={\n          balance === 0 && (expenses.length === 0) & (incomes.length === 0)\n            ? false\n            : true\n        }\n        className={\n          location.pathname === '/transactions/expenses' ? s.activeLink : s.link\n        }\n      >\n        {t('nav.expenses')}\n      </Link>\n      <Link\n        to=\"income\"\n        disabled={\n          balance === 0 && (expenses.length === 0) & (incomes.length === 0)\n            ? false\n            : true\n        }\n        className={\n          location.pathname === '/transactions/income' ? s.activeLink : s.link\n        }\n      >\n        {t('nav.income')}\n      </Link>\n    </div>\n  );\n}\n\nexport default HomeNavigation;\n","// extracted by mini-css-extract-plugin\nexport default {\"expensesText\":\"mobileTransactionList_expensesText__CWicM\",\"listmob\":\"mobileTransactionList_listmob__rgaMx\",\"incomesText\":\"mobileTransactionList_incomesText__DRlwd\",\"itemLi\":\"mobileTransactionList_itemLi__On2Tg\",\"title\":\"mobileTransactionList_title__iJPok\",\"infoText\":\"mobileTransactionList_infoText__+8Axm\",\"date\":\"mobileTransactionList_date__sdG7h\",\"smallinfoText\":\"mobileTransactionList_smallinfoText__gTcld\",\"buttonDeletemob\":\"mobileTransactionList_buttonDeletemob__n1e-7\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getEmailUser } from 'redux/auth/AuthSelector';\nimport {\n  getExpenseTransaction,\n  getIncomeTransaction,\n  removeTransaction,\n} from 'redux/transaction/transaction-operations';\nimport {\n  getExpensesTransactions,\n  getIncomesTransactions,\n} from 'redux/transaction/transaction-selector';\nimport s from './mobileTransactionList.module.css';\n\nconst MobileTransactionList = () => {\n  const ExpensesTransactions = useSelector(getExpensesTransactions);\n  const IncomesTransactions = useSelector(getIncomesTransactions);\n  const minusExpensesAmount = ExpensesTransactions.map(el => {\n    return { ...el, amount: Number(`-${el.amount}`) };\n  });\n\n  const allTransactions = [...IncomesTransactions, ...minusExpensesAmount];\n\n  const dispatch = useDispatch();\n  const email = useSelector(getEmailUser);\n\n  useEffect(() => {\n    if (email) {\n      dispatch(getIncomeTransaction());\n      dispatch(getExpenseTransaction());\n    }\n    // eslint-disable-next-line\n  }, [allTransactions.length, email]);\n\n  return (\n    <ul className={s.listmob}>\n      {allTransactions.map(item => {\n        return (\n          <li key={item._id} className={s.itemLi}>\n            <div className={s.infoText}>\n              <p className={s.title}>{item.description}</p>\n              <div className={s.smallinfoText}>\n                <p className={s.date}>\n                  {item.date.split('-').reverse().join('.')}\n                </p>\n                <p className={s.category}>{item.category}</p>\n              </div>\n            </div>\n            <p className={item.amount < 0 ? s.expensesText : s.incomesText}>\n              {item.amount}\n            </p>\n            <button\n              className={s.buttonDeletemob}\n              onClick={() => dispatch(removeTransaction(item._id))}\n            ></button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MobileTransactionList;\n","// extracted by mini-css-extract-plugin\nexport default {\"timeDiv\":\"datePickerComp_timeDiv__XSt3C\",\"calendarIcon\":\"datePickerComp_calendarIcon__9XRF-\",\"date\":\"datePickerComp_date__Tzw+3\"};","import { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport s from './datePickerComp.module.css';\nimport Sprite from '../../assets/images/svg/sprite.svg';\nconst DatePickerComp = () => {\n  const [date, setDate] = useState(new Date());\n  return (\n    <div className={s.timeDiv}>\n      <svg className={s.calendarIcon} width=\"90\" height=\"31\">\n        <use href={`${Sprite}#icon-calendar`}></use>\n      </svg>\n      <DatePicker\n        dateFormat=\"dd.MM.yyyy\"\n        className={s.date}\n        selected={date}\n        onChange={(date: Date) => setDate(date)}\n      />\n    </div>\n  );\n};\n\nexport default DatePickerComp;\n","// extracted by mini-css-extract-plugin\nexport default {\"btnPrevPagemob\":\"MobileFormTransaction_btnPrevPagemob__Z-xXB\"};","import FormTransaction from 'components/FormTransaction/FormTransaction';\nimport optionsExpense from '../../data/expensesForm.json';\nimport optionsIncome from '../../data/incomeForm.json';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  addExpenseTransaction,\n  addIncomeTransaction,\n} from '../../redux/transaction/transaction-operations';\nimport s from './MobileFormTransaction.module.css';\nimport { useState } from 'react';\nconst MobileFormTransaction = () => {\n  const [date, setDate] = useState(new Date());\n  const navigate = useNavigate();\n  const location = useLocation();\n  return (\n    <>\n      <button\n        className={s.btnPrevPagemob}\n        onClick={e => navigate('transaction')}\n      ></button>\n      {location.pathname === '/transactions/expenses' && (\n        <FormTransaction\n          operation={addExpenseTransaction}\n          options={optionsExpense}\n          date={date}\n          setDate={setDate}\n        />\n      )}\n\n      {location.pathname === '/transactions/income' && (\n        <FormTransaction\n          operation={addIncomeTransaction}\n          options={optionsIncome}\n          date={date}\n          setDate={setDate}\n        />\n      )}\n    </>\n  );\n};\nexport default MobileFormTransaction;\n","import { Suspense, useEffect } from 'react';\nimport { Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport { DataHeader } from 'components/DataHeader/DataHeader';\nimport HomeNavigation from 'components/HomeNavigation/HomeNavigation';\nimport { useMediaQuery } from 'react-responsive';\n\nimport MobileTransactionList from '../components/MobileTransactionList/MobileTransactionList';\nimport DataPicker from '../components/DatePicker/DatePickerComp';\nimport MobileFormTransaction from '../components/MobileFormTransaction/MobileFormTransaction';\n\nconst HomePage = () => {\n  const navigate = useNavigate();\n\n  const isMobile = useMediaQuery({ query: '(max-width: 767.9px)' });\n  const location = useLocation();\n  useEffect(() => {\n    if (!isMobile) {\n      navigate('expenses');\n    }\n\n    // eslint-disable-next-line\n  }, [isMobile]);\n  console.log(location);\n  return (\n    <>\n      {isMobile ? (\n        location.pathname === '/transactions/expenses' ||\n        location.pathname === '/transactions/income' ? (\n          <MobileFormTransaction />\n        ) : (\n          <>\n            <DataHeader />\n            <HomeNavigation />\n            <DataPicker />\n            <MobileTransactionList />\n          </>\n        )\n      ) : (\n        <>\n          <DataHeader />\n          <HomeNavigation />\n          <div className=\"container_transactions\">\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\nexport default HomePage;\n","export const getBalance = state => state.balance.balance;\n","export const isLoading = state => state.transactions.loading;\nexport const getExpensesTransactions = state => state.transactions.expenses;\nexport const getIncomesTransactions = state => state.transactions.incomes;\n"],"names":["BalanceModal","className","s","Balance","balance","useSelector","getBalance","email","getEmailUser","expenses","getExpensesTransactions","incomes","getIncomesTransactions","dispatch","useDispatch","t","useTranslation","location","useLocation","useState","input","setInput","isTab","useMediaQuery","query","isMobile","soundFX","Audio","audio","onSubmit","e","preventDefault","play","changeBalance","newBalance","toast","autoClose","theme","pathname","type","value","toFixed","replace","length","decimalscale","maxLength","onChange","target","disabled","colourStyles","control","styles","border","width","borderRadius","color","backgroundColor","menuList","placeholder","singleValue","colourStylesMob","operation","options","date","setDate","description","setDescription","category","setCategory","amount","setAmount","navigate","useNavigate","initialForm","Number","toISOString","slice","height","href","Sprite","dateFormat","selected","name","required","min","pattern","onClick","Date","DataHeader","to","ExpensesTransactions","IncomesTransactions","minusExpensesAmount","map","el","allTransactions","useEffect","getIncomeTransaction","getExpenseTransaction","item","split","reverse","join","removeTransaction","_id","FormTransaction","addExpenseTransaction","optionsExpense","addIncomeTransaction","optionsIncome","console","log","Suspense","state","isLoading","transactions","loading"],"sourceRoot":""}