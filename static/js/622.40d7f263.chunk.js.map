{"version":3,"file":"static/js/622.40d7f263.chunk.js","mappings":"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","sources":["webpack://kapusta/./src/components/Auth/Auth.module.css?93a7","components/Auth/Auth.jsx","pages/MainPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Auth_form__UlHVT\",\"icon\":\"Auth_icon__VxKIp\",\"link\":\"Auth_link__7l5cU\",\"google\":\"Auth_google__7I5KF\",\"item\":\"Auth_item__UETbT\",\"itemForGoogle\":\"Auth_itemForGoogle__ZQKfO Auth_item__UETbT\",\"wrapper\":\"Auth_wrapper__T2p3f\",\"wrapperPassword\":\"Auth_wrapperPassword__6EWPB\",\"input\":\"Auth_input__njf2M\",\"span\":\"Auth_span__HMBFs\",\"error\":\"Auth_error__uXNtK\",\"text\":\"Auth_text__qAE+h\",\"button\":\"Auth_button__oOib1\",\"buttonSubmit\":\"Auth_buttonSubmit__ii556 Auth_button__oOib1\",\"wrapperButtons\":\"Auth_wrapperButtons__05uaO\",\"notificationError\":\"Auth_notificationError__o9DrU\"};","import { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { registerUser, loginUser, getCurUser } from 'redux/auth/authOperations';\nimport { getAuthError, isLogedIn } from 'redux/auth/AuthSelector';\nimport { toast } from 'react-toastify';\nimport * as Yup from 'yup';\nimport s from './Auth.module.css';\nimport Sprite from '../../assets/images/svg/sprite.svg';\nimport { useEffect } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport { googleAuth } from '../../redux/auth/authSlise';\nimport { useTranslation } from 'react-i18next';\n\nexport const Auth = () => {\n  const error = useSelector(getAuthError);\n\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const { pathname } = useLocation();\n  const token = useSelector(isLogedIn);\n\n  useEffect(() => {\n    if (pathname === '/') {\n      const accessToken = searchParams.get('accessToken');\n      const refreshToken = searchParams.get('refreshToken');\n      const sid = searchParams.get('sid');\n      if (accessToken) {\n        dispatch(googleAuth({ token: accessToken, refreshToken, sid }));\n        dispatch(getCurUser());\n      }\n      token ? navigate('expenses') : navigate('/');\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      password: '',\n      email: '',\n    },\n\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n\n    validationSchema: Yup.object({\n      email: Yup.string().email(t('registration.emailErr')).required(t('registration.required')),\n      password: Yup.string()\n        .min(7, t('registration.lengthErr'))\n        .required(t('registration.required')),\n    }),\n  });\n\n  const handleSubmitRegister = e => {\n    e.preventDefault();\n    if (formik.errors.email || formik.errors.password) {\n      toast.error(t('registration.registrationInfo'), {\n        autoClose: 2000,\n        theme: 'colored',\n      });\n      return;\n    }\n    dispatch(\n      registerUser({\n        email: formik.values.email,\n        password: formik.values.password,\n      })\n    );\n\n    reset();\n  };\n\n  const handleSubmitLogin = e => {\n    e.preventDefault();\n    if (formik.errors.email || formik.errors.password) {\n      toast.error(t('registration.registrationInfo'), {\n        autoClose: 2000,\n        theme: 'colored',\n      });\n      return;\n    }\n\n    dispatch(\n      loginUser({\n        email: formik.values.email,\n        password: formik.values.password,\n      })\n    );\n\n    reset();\n  };\n\n  const reset = () => {\n    formik.values.email = '';\n    formik.values.password = '';\n  };\n\n  return (\n    <>\n      <form className={s.form} onSubmit={formik.handleSubmit}>\n        <p className={s.itemForGoogle}>{t('registration.googleTitle')}</p>\n        <a\n          className={s.link}\n          href=\"https://kapusta-backend.goit.global/auth/google\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <svg className={s.icon} width={18} height={18}>\n            <use href={`${Sprite}#icon-google`} />\n          </svg>\n          <span className={s.google}>Google</span>\n        </a>\n        <p className={s.item}>{t('registration.mainTitle')}</p>\n        <div className={s.wrapper}>\n          <label className={s.text} htmlFor=\"email\">\n            {formik.touched.email && formik.errors.email && <span className={s.span}>*</span>}\n            {t('registration.email')}\n          </label>\n          <input\n            className={s.input}\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"your@email.com\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          <p className={s.error}>\n            {formik.touched.email && formik.errors.email && formik.errors.email}\n          </p>\n        </div>\n        <div className={s.wrapperPassword}>\n          <label className={s.text} htmlFor=\"password\">\n            {formik.touched.password && formik.errors.password && <span className={s.span}>*</span>}\n            {t('registration.password')}\n          </label>\n          <input\n            className={s.input}\n            type=\"password\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n          <p className={s.error}>\n            {formik.touched.password && formik.errors.password && formik.errors.password}\n          </p>\n        </div>\n        <>\n          <div className={s.wrapperButtons}>\n            <button className={s.buttonSubmit} type=\"submit\" onClick={handleSubmitLogin}>\n              {t('registration.enter')}\n            </button>\n            <button className={s.button} type=\"submit\" onClick={handleSubmitRegister}>\n              {t('registration.registration')}\n            </button>\n          </div>\n        </>\n      </form>\n      {error === 'Request failed with status code 400' &&\n        formik.values.email === '' &&\n        formik.values.password === '' &&\n        !formik.errors.email &&\n        !formik.errors.password && (\n          <div className={s.notificationError}>{t('registration.registrationErr1')}</div>\n        )}\n      {error === 'Request failed with status code 409' &&\n        formik.values.email === '' &&\n        formik.values.password === '' &&\n        !formik.errors.email &&\n        !formik.errors.password && (\n          <div className={s.notificationError}>{t('registration.registrationErr2')}</div>\n        )}\n      {error === 'Request failed with status code 403' &&\n        formik.values.email === '' &&\n        formik.values.password === '' &&\n        !formik.errors.email &&\n        !formik.errors.password && (\n          <div className={s.notificationError}>{t('registration.registrationErr3')}</div>\n        )}\n    </>\n  );\n};\n","import { Auth } from 'components/Auth/Auth';\n\nconst MainPage = () => {\n  return <Auth />;\n};\nexport default MainPage;\n"],"names":["Auth","error","useSelector","getAuthError","_useSearchParams","useSearchParams","searchParams","_slicedToArray","navigate","useNavigate","dispatch","useDispatch","t","useTranslation","pathname","useLocation","token","isLogedIn","useEffect","accessToken","get","refreshToken","sid","googleAuth","getCurUser","formik","useFormik","initialValues","password","email","onSubmit","values","alert","JSON","stringify","validationSchema","Yup","required","min","reset","_jsxs","_Fragment","children","className","s","handleSubmit","_jsx","href","target","rel","width","height","concat","Sprite","htmlFor","touched","errors","type","name","id","placeholder","onChange","handleChange","onBlur","handleBlur","value","onClick","e","preventDefault","toast","autoClose","theme","loginUser","registerUser"],"sourceRoot":""}