{"version":3,"file":"static/js/777.fcf19b24.chunk.js","mappings":"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","sources":["webpack://kapusta/./src/components/ExpensesComponent/ExpensesComponent.module.css?99b0","components/ExpensesComponent/ExpensesComponent.jsx","webpack://kapusta/./src/components/FormTransaction/FormTransaction.module.css?f8df","components/FormTransaction/FormTransaction.jsx","webpack://kapusta/./src/components/Summary/Summary.module.css?9efb","components/Summary/Summary.jsx","../node_modules/nanoid/index.browser.js","webpack://kapusta/./src/components/TransactionList/TransactionList.module.css?a859","components/TransactionList/TransactionList.jsx","redux/monthsStats/monthsStats-selector.js","redux/transaction/transaction-selector.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"transactions\":\"ExpensesComponent_transactions__GBp52\",\"form\":\"ExpensesComponent_form__7cTsh\",\"container\":\"ExpensesComponent_container__eBncE\",\"date\":\"ExpensesComponent_date__ErZIr\",\"input\":\"ExpensesComponent_input__9kCY1\",\"select\":\"ExpensesComponent_select__-P4DU\",\"selectList\":\"ExpensesComponent_selectList__qXpLM\",\"buttonInput\":\"ExpensesComponent_buttonInput__vxQzJ\",\"buttonClear\":\"ExpensesComponent_buttonClear__xlIk+\"};","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addExpenseTransaction,\n  getExpenseTransaction,\n} from '../../redux/transaction/transaction-operations';\nimport {\n  getExpensesTransactions,\n  isLoading,\n} from 'redux/transaction/transaction-selector';\nimport { expensesStats } from 'redux/monthsStats/monthsStats-selector';\nimport Loader from 'components/Loader/Loader';\nimport { Summary } from 'components/Summary/Summary';\nimport FormTransaction from 'components/FormTransaction/FormTransaction';\nimport TransactionList from 'components/TransactionList/TransactionList';\nimport s from './ExpensesComponent.module.css';\nimport { getEmailUser } from 'redux/auth/AuthSelector';\nimport { useTranslation } from 'react-i18next';\n\nconst ExpensesComponent = () => {\n  const [date, setDate] = useState(new Date());\n  const loading = useSelector(isLoading);\n  const email = useSelector(getEmailUser);\n  const monthStats = useSelector(expensesStats);\n  const transactions = useSelector(getExpensesTransactions);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const expensesCategArray = t('expensesCategArray', { returnObjects: true });\n\n  useEffect(() => {\n    if (email && transactions.length === 0) dispatch(getExpenseTransaction());\n    // eslint-disable-next-line\n  }, [transactions.length, email]);\n\n  return (\n    <>\n      <FormTransaction\n        operation={addExpenseTransaction}\n        options={expensesCategArray}\n        date={date}\n        setDate={setDate}\n      />\n      <div className={s.transactions}>\n        <TransactionList\n          location=\"expenses\"\n          transactionsArray={transactions.filter(\n            el => el.date === date.toISOString().slice(0, 10)\n          )}\n        />\n        <Summary monthStats={monthStats} />\n      </div>\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default ExpensesComponent;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormTransaction_form__Drpod\",\"timeDiv\":\"FormTransaction_timeDiv__VkmNl\",\"calendarIcon\":\"FormTransaction_calendarIcon__7sCrv\",\"date\":\"FormTransaction_date__exygo\",\"input\":\"FormTransaction_input__Jbj3O\",\"select\":\"FormTransaction_select__cUCSM\",\"calcInput\":\"FormTransaction_calcInput__cByYk\",\"buttonList\":\"FormTransaction_buttonList__r8Tzc\",\"buttonInput\":\"FormTransaction_buttonInput__Fqdxq\",\"buttonClear\":\"FormTransaction_buttonClear__hDUfF\",\"label\":\"FormTransaction_label__LxjKS\"};","import { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport DatePicker from 'react-datepicker';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport s from './FormTransaction.module.css';\nimport { toast } from 'react-toastify';\nimport { useMediaQuery } from 'react-responsive';\nimport { useNavigate } from 'react-router-dom';\nimport Sprite from '../../assets/images/svg/sprite.svg';\n\nconst colourStyles = {\n  control: styles => ({\n    ...styles,\n    border: ' 2px solid var(--border-light)',\n    width: '169px',\n    borderRadius: '0px',\n    color: '#C7CCDC',\n    backgroundColor: 'var(--input-bg-color)',\n  }),\n  menuList: styles => ({\n    ...styles,\n    backgroundColor: 'var(--input-bg-color)',\n    border: ' 2px solid var(--border-light)',\n    borderRadius: '4px',\n  }),\n  placeholder: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n  singleValue: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n};\n\nconst colourStylesMob = {\n  control: styles => ({\n    ...styles,\n    border: ' none',\n    width: '280px',\n    borderRadius: '0px',\n    color: '#C7CCDC',\n    backgroundColor: 'transparent',\n  }),\n  menuList: styles => ({\n    ...styles,\n    backgroundColor: 'var(--input-bg-color)',\n    border: ' 2px solid var(--border-light)',\n    borderRadius: '4px',\n  }),\n  placeholder: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n  singleValue: styles => ({\n    ...styles,\n    color: '#C7CCDC',\n  }),\n};\n\nconst FormTransaction = ({ operation, options, date, setDate }) => {\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState(null);\n  const [amount, setAmount] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const isMobile = useMediaQuery({ query: '(max-width: 767.9px)' });\n  const handleChange = e => {\n    const { value } = e.target;\n    setDescription(value);\n  };\n\n  const handleChangeAmount = e => {\n    const { value } = e.target;\n    setAmount(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (category === null) {\n      return toast.error(t('transactions.categoryInfo'), {\n        autoClose: 2000,\n        theme: 'colored',\n      });\n    }\n    const initialForm = {\n      description,\n      amount: Number(amount),\n      date: date.toISOString().slice(0, 10),\n      category: category.value,\n    };\n    dispatch(operation(initialForm));\n    if (isMobile) {\n      navigate('transactions');\n    }\n  };\n\n  const reset = () => {\n    setDate(new Date());\n    setDescription('');\n    setCategory(null);\n    setAmount('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <div className={s.timeDiv}>\n        <svg className={s.calendarIcon} width=\"90\" height=\"31\">\n          <use href={`${Sprite}#icon-calendar`}></use>\n        </svg>\n        <DatePicker\n          dateFormat=\"dd.MM.yyyy\"\n          className={s.date}\n          selected={date}\n          onChange={(date: Date) => setDate(date)}\n        />\n      </div>\n\n      <label className={s.label}>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"description\"\n          placeholder={t('transactions.prodDescr')}\n          required\n          value={description}\n          onChange={handleChange}\n        />\n      </label>\n      <Select\n        className={s.select}\n        styles={isMobile ? colourStylesMob : colourStyles}\n        placeholder={t('transactions.prodCateg')}\n        value={category}\n        onChange={setCategory}\n        options={options}\n      />\n      <label>\n        <input\n          className={s.calcInput}\n          type=\"number\"\n          name=\"number\"\n          min=\"0\"\n          pattern=\"^[1-9]\\d*$\"\n          required\n          placeholder=\"0,00\"\n          value={amount}\n          onChange={handleChangeAmount}\n        />\n      </label>\n      <div className={s.buttonList}>\n        {' '}\n        <button type=\"submit\" className={s.buttonInput}>\n          {t('transactions.input')}\n        </button>{' '}\n        <button type=\"button\" className={s.buttonClear} onClick={reset}>\n          {t('transactions.clear')}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nFormTransaction.propTypes = {\n  operation: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default FormTransaction;\n","// extracted by mini-css-extract-plugin\nexport default {\"summary\":\"Summary_summary__0kpmh\",\"title\":\"Summary_title__dimK-\",\"list\":\"Summary_list__dKE4L\",\"item\":\"Summary_item__St+1w\"};","import PropTypes from 'prop-types';\nimport { useRef } from 'react';\nimport s from './Summary.module.css';\nimport { useTranslation } from 'react-i18next';\n\nexport const Summary = ({ monthStats }) => {\n  const currentDate = useRef(new Date().getMonth());\n  const array = Object.entries(monthStats);\n  const filteredMonthsStats = array.filter(\n    (el, index) => index <= currentDate.current\n  );\n\n  const filteredMonths = array.filter(\n    (el, index) => index <= currentDate.current\n  );\n  const { t } = useTranslation();\n  const month = t('months', { returnObjects: true });\n\n  return (\n    <div className={s.summary}>\n      {filteredMonthsStats.length > 0 && (\n        <ul className={s.list}>\n          <li className={s.title}>{t('summary.summary')}</li>\n          {filteredMonths.map(el => (\n            <li key={el[0]} className={s.item}>\n              <p>{month[el[0]]}</p>\n              <p>\n                {el[1] === 'N/A'\n                  ? 0\n                  : el[1]\n                      .toFixed(2)\n                      .replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ')}\n              </p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nSummary.propTypes = {\n  monthStats: PropTypes.object.isRequired,\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"TransactionList_table__cOyds\",\"buttonDelete\":\"TransactionList_buttonDelete__ZC2ef\",\"expenses\":\"TransactionList_expenses__J27sj\",\"incomes\":\"TransactionList_incomes__1-wz6\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { nanoid } from 'nanoid';\nimport { removeTransaction } from 'redux/transaction/transaction-operations';\nimport s from './TransactionList.module.css';\nimport { getEmailUser } from 'redux/auth/AuthSelector';\n\nconst TransactionList = ({ transactionsArray, location }) => {\n  const email = useSelector(getEmailUser);\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n  const expenseReport = t('expenseReport', { returnObjects: true });\n  const incomeReport = t('incomeReport', { returnObjects: true });\n\n  const createNewArray = array => {\n    const addArray = Array(7 - array.length)\n      .fill({\n        _id: '',\n        description: '',\n        amount: null,\n        date: '',\n        category: '',\n      })\n      .map(el => ({ ...el, _id: nanoid() }));\n    return [...array, ...addArray];\n  };\n\n  const arrayTable =\n    transactionsArray.length < 7\n      ? createNewArray(transactionsArray)\n      : transactionsArray;\n\n  return (\n    <>\n      {console.log(location)}\n      {email && (\n        <table className={s.table}>\n          <thead>\n            <tr>\n              <th>{t('transactions.date')}</th>\n              <th>{t('transactions.descr')}</th>\n              <th>{t('transactions.categ')}</th>\n              <th>{t('transactions.sum')}</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody className={s.tableBody}>\n            {arrayTable.map((item, index) => (\n              <tr key={item._id}>\n                <td>{item.date && item.date.split('-').reverse().join('.')}</td>\n                <td>{item.description && item.description}</td>\n                <td>\n                  {item.category && location === 'expenses'\n                    ? expenseReport[item.category].title\n                    : incomeReport[item.category]}\n                </td>\n                <td\n                  style={\n                    location === 'expenses'\n                      ? { color: 'red', fontWeight: 'bold' }\n                      : { color: 'green', fontWeight: 'bold' }\n                  }\n                >\n                  {location === 'expenses' && item.amount && '-'}\n                  &nbsp;\n                  {item.amount &&\n                    `${item.amount\n                      .toFixed(2)\n                      .replace(/(\\d)(?=(\\d{3})+([^\\d]|$))/g, '$1 ')} ${t(\n                      'general.currencyName'\n                    )}`}\n                </td>\n                <td>\n                  {item.amount && (\n                    <button\n                      className={s.buttonDelete}\n                      onClick={() => dispatch(removeTransaction(item._id))}\n                    ></button>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n\nTransactionList.propTypes = {\n  transactionsArray: PropTypes.array.isRequired,\n  location: PropTypes.string.isRequired,\n};\n\nexport default TransactionList;\n","export const expensesStats = state => state.monthsStats.expenses;\nexport const incomesStats = state => state.monthsStats.incomes;\n","export const isLoading = state => state.transactions.loading;\nexport const getExpensesTransactions = state => state.transactions.expenses;\nexport const getIncomesTransactions = state => state.transactions.incomes;\n"],"names":["useState","Date","date","setDate","loading","useSelector","isLoading","email","getEmailUser","monthStats","expensesStats","transactions","getExpensesTransactions","dispatch","useDispatch","expensesCategArray","t","useTranslation","returnObjects","useEffect","length","getExpenseTransaction","FormTransaction","operation","addExpenseTransaction","options","className","s","TransactionList","location","transactionsArray","filter","el","toISOString","slice","Summary","Loader","colourStyles","control","styles","border","width","borderRadius","color","backgroundColor","menuList","placeholder","singleValue","colourStylesMob","description","setDescription","category","setCategory","amount","setAmount","navigate","useNavigate","isMobile","useMediaQuery","query","onSubmit","e","preventDefault","toast","autoClose","theme","initialForm","Number","value","height","href","Sprite","dateFormat","selected","onChange","type","name","required","target","min","pattern","onClick","currentDate","useRef","getMonth","array","Object","entries","filteredMonthsStats","index","current","filteredMonths","month","map","toFixed","replace","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","expenseReport","incomeReport","arrayTable","addArray","Array","fill","_id","createNewArray","console","log","item","split","reverse","join","title","style","fontWeight","removeTransaction","state","monthsStats","expenses","incomesStats","incomes","getIncomesTransactions"],"sourceRoot":""}